pipeline {
  agent any

  parameters {
    string(name: 'CONFIRM', defaultValue: '', description: 'Tapez "OUI" pour confirmer la destruction.')
  }

  stages {
    stage('üì• Copier terraform.tfstate du job apply') {
      steps {
        copyArtifacts(
          projectName: 'nom_du_job_apply', // ‚Üê √† adapter
          selector: lastSuccessful(),
          filter: 'terraform.tfstate',
          target: '.',
          flatten: true
        )
      }
    }

    stage('üßπ Confirmation') {
      when {
        expression { return params.CONFIRM == 'OUI' }
      }
      steps {
        echo "‚úÖ Confirmation valid√©e. On lance la destruction."
      }
    }

    stage('üîç V√©rification tfstate') {
      when {
        expression { return params.CONFIRM == 'OUI' }
      }
      steps {
        sh '''
          echo "Contenu du r√©pertoire courant :"
          ls -lh
          echo "Contenu de terraform.tfstate :"
          cat terraform.tfstate || echo "‚ùå Fichier manquant"
        '''
      }
    }

    stage('‚ö†Ô∏è Terraform Destroy') {
      when {
        expression { return params.CONFIRM == 'OUI' }
      }
      steps {
        withCredentials([
          string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
          string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')
        ]) {
          sh '''
            terraform init
            terraform destroy -auto-approve
          '''
        }
      }
    }

    stage('‚õî Annulation') {
      when {
        expression { return params.CONFIRM != 'OUI' }
      }
      steps {
        echo "‚ùå Destruction annul√©e. Entrez CONFIRM=OUI pour valider."
      }
    }
  }

  post {
    always {
      echo "üßæ Fin du pipeline de destruction."
    }
  }
}
